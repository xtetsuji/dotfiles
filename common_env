# -*- shell-script -*-
: "start .common_env"

###
### Path
###
export PATH
push_path_var ~/bin
push_path_var ~/Dropbox/bin
push_path_var /usr/local/bin
push_path_var /opt/homebrew/bin
unshift_path_var "$BREW_PREFIX/opt/coreutils/libexec/gnubin"
unshift_path_var "$BREW_PREFIX/opt/zip/bin"
unshift_path_var "$BREW_PREFIX/opt/unzip/bin"

###
### pager and editor
###
export PAGER=less
export EDITOR=vi

# less
export LESS='-i -M -R'
export LESS_TERMCAP_mb=$'\E[01;31m'      # Begins blinking.
export LESS_TERMCAP_md=$'\E[01;31m'      # Begins bold.
export LESS_TERMCAP_me=$'\E[0m'          # Ends mode.
export LESS_TERMCAP_se=$'\E[0m'          # Ends standout-mode.
export LESS_TERMCAP_so=$'\E[00;47;30m'   # Begins standout-mode.
export LESS_TERMCAP_ue=$'\E[0m'          # Ends underline.
export LESS_TERMCAP_us=$'\E[01;32m'      # Begins underline.
if exists lesspipe.sh ; then
  export LESSOPEN='| /usr/bin/env lesspipe.sh %s 2>&-'
fi

# git
export GIT_PAGER='less -FRX'

# perldoc
export PERLDOC_PAGER='less -FRX'

# lv
export LV='-c -Ouj'

# vim (if exist)
if exists vim ; then
    export EDITOR=vim
fi

# mysql
export MYSQL_PS1='\u@\h> '

###
### Locale / Lang
###
if ! is_codepsaces ; then
    export LANG="ja_JP.UTF-8"
    export LC_COLLATE="ja_JP.UTF-8"
    export LC_CTYPE="UTF-8"
    export LC_MESSAGES="ja_JP.UTF-8"
    export LC_MONETARY="ja_JP.UTF-8"
    export LC_NUMERIC="ja_JP.UTF-8"
    export LC_TIME="ja_JP.UTF-8"
    export LC_ALL="ja_JP.UTF-8"
    export TZ=JST-9
fi

export CVS_RSH=ssh
export RSYNC_RSH=ssh

###
### Information
###
if is_darwin ; then
    export icloud_drive=$HOME/Library/Mobile\ Documents/com~apple~CloudDocs
    if [ ! -d "$icloud_drive" ] ; then
        unset icloud_drive
    fi
fi

###
### some settings
###

# see: http://d.hatena.ne.jp/hogem/20090411/1239451878
# Ignore C-s for terminal stop.
stty stop undef

set bell-style visible

# avoid Ctrl-D logout.
IGNOREEOF=3

function import-clr {
    local url=https://raw.githubusercontent.com/maxtsepkov/bash_colors/master/bash_colors.sh
    echo "download $url or take its cache"
    eval "$(bkt --ttl=$BKT_TTL -- curl -fsSL $url)"
    echo "import clr_*"
    echo "  clr_dump:"
    clr_dump
}

###
### plenv
###
if [ -d $HOME/.plenv ] ; then
    export PLENV_ROOT=$HOME/.plenv
    export PATH=$PLENV_ROOT/bin:$PATH
    eval "$(bkt --ttl=$BKT_TTL -- plenv init - ${SHELL##*/})"
fi

###
### rbenv
###
if [ -d $HOME/.rbenv ] ; then
    export RBENV_ROOT=$HOME/.rbenv
    export PATH=$RBENV_ROOT/bin:$PATH
    eval "$(bkt --ttl=$BKT_TTL -- rbenv init - ${SHELL##*/})"
fi

###
### golang
###
# brew install go
if exists go ; then
    export GOPATH=~/.go
    export PATH=$GOPATH/bin:$PATH
    if [ ! -d "$GOPATH" ] ; then
        mkdir -p "$GOPATH"
    fi
fi

###
### ssh-agent
###
# http://www.gcd.org/blog/2006/09/100/
MY_SSH_AUTH_SOCK_PATH="/tmp/ssh-agent-$USER"
if [ -S "$SSH_AUTH_SOCK" ]; then
    case $SSH_AUTH_SOCK in
    /tmp/*/agent.[0-9]*)
        ln -snf "$SSH_AUTH_SOCK" $MY_SSH_AUTH_SOCK_PATH \
                && export SSH_AUTH_SOCK=$MY_SSH_AUTH_SOCK_PATH
    esac
elif [ -S $MY_SSH_AUTH_SOCK_PATH ]; then
    export SSH_AUTH_SOCK=$MY_SSH_AUTH_SOCK_PATH
else
    : #echo "no ssh-agent"
fi

###
### local setting (if exists)
###

source_if_readable ~/.common_env.local


: "end .common_env"
